version: "3.8"

services:

  db:
    image: postgres:latest
    volumes:
      - "./dbdata:/var/lib/postgresql/data"
    env_file:
      - .env
    networks:
      - db_network
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ejada

  flaskapp:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - ./backend:/opt/services/flaskapp/src
    depends_on:
      - db
    links:
      - db:db
    networks:
      - web_network
      - db_network
      
    expose:
      - 5090


  frontend:
    container_name: app-frontend
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - "./client:/usr/src/app"
      - "/usr/src/app/node_modules"
    ports:
      - "1234:1234"
    depends_on:
      - flaskapp
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    links:
      - flaskapp:flaskapp
    networks:
      - web_network

  nginx:
    image: nginx:latest
    volumes:
      - ./conf.d:/etc/nginx/conf.d
    networks:
      - web_network
    ports:
      - "8080:80"
    depends_on:
      - frontend

networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge

volumes:
  dbdata: