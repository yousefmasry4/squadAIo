{
	"swagger": "2.0",
	"info": {
		"title": "Hackathon group members API",
		"description": "Hackathon group members API Documentation",
		"version": "1.0"
	},
	"host": "34.254.168.73:7882",
	"schemes": [
		"https"
	],
	"basePath": "/v1/hackathon-groups",
	"paths": {
		"/{groupId}/members": {
			"post": {
				"tags": [
					"hackathon-groups"
				],
				"operationId": "hackathon-groups",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "groupId",
						"in": "path",
						"description": "groupId, Individual groupId is '1' and for non-individual groupId is any value other than '1'",
						"required": true,
						"type": "string"
					},
					{
						"name": "input",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/hackathonGroupsRq"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/hackathonGroupsRs"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/errorReply"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/errorReply"
						}
					},
					"403": {
						"description": "Forbidden",
						"schema": {
							"$ref": "#/definitions/errorReply"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/errorReply"
						}
					},
					"500": {
						"description": "InternalServerError",
						"schema": {
							"$ref": "#/definitions/errorReply"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"hackathonGroupsRq": {
			"type": "object",
			"required": [
				"members",
				"teamName",
				"selectedChallenges"
			],
			"properties": {
				"teamName": {
					"type": "string",
					"description": "team Name",
					"example": "Team Name: SquadAIo"
				},
				"selectedChallenges": {
					"type": "string",
					"description": "Challenges",
					"example": "Open AI"
				},
				"members": {
					"type": "array",
					"description": "members",
					"maxItems": 1,
					"items": {
						"$ref": "#/definitions/hackathonGroupsMemberDetails"
					}
				}
			}
		},
		"hackathonGroupsMemberDetails": {
			"type": "object",
			"required": [
				"mobileNumber",
				"title",
				"name"
			],
			"properties": {
				"name": {
					"type": "string",
					"description": "Name of member",
					"example": "Dina"
				},
				"title": {
					"type": "string",
					"description": "title of member",
					"example": "junior"
				},
				"employeID": {
					"type": "string",
					"example": "Y0677",
					"minLength": 1,
					"maxLength": 12
				},
				"mobileNumber": {
					"type": "string",
					"maxLength": 13,
					"minLength": 13,
					"pattern": "^(\\+9665)([0-9]{8})$",
					"description": "Mobile Number",
					"example": "+966585822545"
				},
				"email": {
					"type": "string",
					"example": "daly@ejada.com"
				},
				"certificates": {
					"type": "array",
					"description": "certificates.",
					"maxItems": 1,
					"items": {
						"type": "string",
						"example": "AI"
					}
				}
			}
		},
		"hackathonGroupsRs": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/header"
				},
				"body": {
					"$ref": "#/definitions/hackathonGroupsResponse"
				}
			}
		},
		"hackathonGroupsResponse": {
			"type": "object",
			"required": [
				"bulkTransactionId",
				"members"
			],
			"properties": {
				"bulkTransactionId": {
					"type": "string",
					"description": "bulkTransactionId"
				},
				"members": {
					"type": "array",
					"description": "members",
					"maxItems": 1,
					"items": {
						"$ref": "#/definitions/hackathonGroupsMemberResponseDetails"
					}
				}
			}
		},
		"hackathonGroupsMemberResponseDetails": {
			"type": "object",
			"required": [
				"payToAmount",
				"payToPartyId",
				"paymentStatus",
				"externalTransactionId",
				"transactionInitiationTimestamp"
			],
			"properties": {
				"payToAmount": {
					"type": "number",
					"description": "payToAmount >= 0 "
				},
				"payToPartyId": {
					"type": "string",
					"description": "partyId"
				},
				"paymentStatus": {
					"type": "string",
					"description": "settlementStatus",
					"enum": [
						"FAILED",
						"INITIATED",
						"PAID",
						"PENDING_IVR_VERIFICATION"
					]
				},
				"externalTransactionId": {
					"type": "string",
					"description": "externalTransactionId"
				},
				"transactionId": {
					"type": "string",
					"example": 495678,
					"description": "The transaction reference number",
					"minLength": 1,
					"maxLength": 36
				},
				"transactionStatusCode": {
					"type": "string",
					"description": "transactionStatusCode"
				},
				"transactionInitiationTimestamp": {
					"type": "string",
					"example": "2024-01-25T14:59:01",
					"description": "transactionInitiationTimestamp"
				}
			}
		},
		"header": {
			"type": "object",
			"properties": {
				"requestId": {
					"type": "string",
					"format": "uuid",
					"example": "6390cc30-16d9-11eb-adc1-0242ac120002"
				},
				"status": {
					"type": "object",
					"properties": {
						"code": {
							"type": "string",
							"example": "I000000"
						},
						"description": {
							"type": "string",
							"example": "Success"
						}
					}
				}
			}
		},
		"errorReply": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/header"
				}
			}
		}
	}
}